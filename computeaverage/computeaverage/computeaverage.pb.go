// Code generated by protoc-gen-go. DO NOT EDIT.
// source: computeaverage/computeaverage/computeaverage.proto

package computeaverage

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ComputeAverageRequest struct {
	Number               float64  `protobuf:"fixed64,1,opt,name=number,proto3" json:"number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ComputeAverageRequest) Reset()         { *m = ComputeAverageRequest{} }
func (m *ComputeAverageRequest) String() string { return proto.CompactTextString(m) }
func (*ComputeAverageRequest) ProtoMessage()    {}
func (*ComputeAverageRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1b6674235637eed, []int{0}
}

func (m *ComputeAverageRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ComputeAverageRequest.Unmarshal(m, b)
}
func (m *ComputeAverageRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ComputeAverageRequest.Marshal(b, m, deterministic)
}
func (m *ComputeAverageRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ComputeAverageRequest.Merge(m, src)
}
func (m *ComputeAverageRequest) XXX_Size() int {
	return xxx_messageInfo_ComputeAverageRequest.Size(m)
}
func (m *ComputeAverageRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ComputeAverageRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ComputeAverageRequest proto.InternalMessageInfo

func (m *ComputeAverageRequest) GetNumber() float64 {
	if m != nil {
		return m.Number
	}
	return 0
}

type ComputeAverageResponse struct {
	Response             float64  `protobuf:"fixed64,1,opt,name=response,proto3" json:"response,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ComputeAverageResponse) Reset()         { *m = ComputeAverageResponse{} }
func (m *ComputeAverageResponse) String() string { return proto.CompactTextString(m) }
func (*ComputeAverageResponse) ProtoMessage()    {}
func (*ComputeAverageResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1b6674235637eed, []int{1}
}

func (m *ComputeAverageResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ComputeAverageResponse.Unmarshal(m, b)
}
func (m *ComputeAverageResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ComputeAverageResponse.Marshal(b, m, deterministic)
}
func (m *ComputeAverageResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ComputeAverageResponse.Merge(m, src)
}
func (m *ComputeAverageResponse) XXX_Size() int {
	return xxx_messageInfo_ComputeAverageResponse.Size(m)
}
func (m *ComputeAverageResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ComputeAverageResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ComputeAverageResponse proto.InternalMessageInfo

func (m *ComputeAverageResponse) GetResponse() float64 {
	if m != nil {
		return m.Response
	}
	return 0
}

func init() {
	proto.RegisterType((*ComputeAverageRequest)(nil), "computeaverage.ComputeAverageRequest")
	proto.RegisterType((*ComputeAverageResponse)(nil), "computeaverage.ComputeAverageResponse")
}

func init() {
	proto.RegisterFile("computeaverage/computeaverage/computeaverage.proto", fileDescriptor_a1b6674235637eed)
}

var fileDescriptor_a1b6674235637eed = []byte{
	// 149 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x32, 0x4a, 0xce, 0xcf, 0x2d,
	0x28, 0x2d, 0x49, 0x4d, 0x2c, 0x4b, 0x2d, 0x4a, 0x4c, 0x4f, 0xd5, 0xc7, 0xcb, 0xd5, 0x2b, 0x28,
	0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x43, 0x15, 0x55, 0xd2, 0xe7, 0x12, 0x75, 0x86, 0x88, 0x38, 0x42,
	0x44, 0x82, 0x52, 0x0b, 0x4b, 0x53, 0x8b, 0x4b, 0x84, 0xc4, 0xb8, 0xd8, 0xf2, 0x4a, 0x73, 0x93,
	0x52, 0x8b, 0x24, 0x18, 0x15, 0x18, 0x35, 0x18, 0x83, 0xa0, 0x3c, 0x25, 0x13, 0x2e, 0x31, 0x74,
	0x0d, 0xc5, 0x05, 0xf9, 0x79, 0xc5, 0xa9, 0x42, 0x52, 0x5c, 0x1c, 0x45, 0x50, 0x36, 0x54, 0x0f,
	0x9c, 0x6f, 0x54, 0xca, 0xc5, 0x87, 0xaa, 0x4b, 0x28, 0x19, 0x43, 0x44, 0x55, 0x0f, 0xcd, 0xc5,
	0x58, 0x1d, 0x26, 0xa5, 0x46, 0x48, 0x19, 0xc4, 0x4a, 0x25, 0x06, 0x0d, 0x46, 0x27, 0x81, 0x28,
	0x34, 0xff, 0x26, 0xb1, 0x81, 0x83, 0xc1, 0x18, 0x10, 0x00, 0x00, 0xff, 0xff, 0x2d, 0xd9, 0x7c,
	0x24, 0x3c, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ComputeAverageClient is the client API for ComputeAverage service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ComputeAverageClient interface {
	ComputeAverage(ctx context.Context, opts ...grpc.CallOption) (ComputeAverage_ComputeAverageClient, error)
}

type computeAverageClient struct {
	cc *grpc.ClientConn
}

func NewComputeAverageClient(cc *grpc.ClientConn) ComputeAverageClient {
	return &computeAverageClient{cc}
}

func (c *computeAverageClient) ComputeAverage(ctx context.Context, opts ...grpc.CallOption) (ComputeAverage_ComputeAverageClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ComputeAverage_serviceDesc.Streams[0], "/computeaverage.ComputeAverage/ComputeAverage", opts...)
	if err != nil {
		return nil, err
	}
	x := &computeAverageComputeAverageClient{stream}
	return x, nil
}

type ComputeAverage_ComputeAverageClient interface {
	Send(*ComputeAverageRequest) error
	CloseAndRecv() (*ComputeAverageResponse, error)
	grpc.ClientStream
}

type computeAverageComputeAverageClient struct {
	grpc.ClientStream
}

func (x *computeAverageComputeAverageClient) Send(m *ComputeAverageRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *computeAverageComputeAverageClient) CloseAndRecv() (*ComputeAverageResponse, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(ComputeAverageResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// ComputeAverageServer is the server API for ComputeAverage service.
type ComputeAverageServer interface {
	ComputeAverage(ComputeAverage_ComputeAverageServer) error
}

// UnimplementedComputeAverageServer can be embedded to have forward compatible implementations.
type UnimplementedComputeAverageServer struct {
}

func (*UnimplementedComputeAverageServer) ComputeAverage(srv ComputeAverage_ComputeAverageServer) error {
	return status.Errorf(codes.Unimplemented, "method ComputeAverage not implemented")
}

func RegisterComputeAverageServer(s *grpc.Server, srv ComputeAverageServer) {
	s.RegisterService(&_ComputeAverage_serviceDesc, srv)
}

func _ComputeAverage_ComputeAverage_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(ComputeAverageServer).ComputeAverage(&computeAverageComputeAverageServer{stream})
}

type ComputeAverage_ComputeAverageServer interface {
	SendAndClose(*ComputeAverageResponse) error
	Recv() (*ComputeAverageRequest, error)
	grpc.ServerStream
}

type computeAverageComputeAverageServer struct {
	grpc.ServerStream
}

func (x *computeAverageComputeAverageServer) SendAndClose(m *ComputeAverageResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *computeAverageComputeAverageServer) Recv() (*ComputeAverageRequest, error) {
	m := new(ComputeAverageRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _ComputeAverage_serviceDesc = grpc.ServiceDesc{
	ServiceName: "computeaverage.ComputeAverage",
	HandlerType: (*ComputeAverageServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "ComputeAverage",
			Handler:       _ComputeAverage_ComputeAverage_Handler,
			ClientStreams: true,
		},
	},
	Metadata: "computeaverage/computeaverage/computeaverage.proto",
}
